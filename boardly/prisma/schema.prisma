generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String         @id @default(auto()) @map("_id") @db.ObjectId
  email     String         @unique
  firstName String
  lastName  String
  workspaces UserWorkspace[]
  activities Activity[]
}

model Workspace {
  id        String         @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdBy String        
  users     UserWorkspace[]
  boards    Board[]     
  activities Activity[]
}

model Board {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  workspace   Workspace  @relation(fields: [workspaceId], references: [id])
  workspaceId String     @db.ObjectId
  columns     Column[]  
  activities Activity[]
}

model UserWorkspace {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  userId      String     @db.ObjectId
  workspaceId String     @db.ObjectId
  user        User       @relation(fields: [userId], references: [id])
  workspace   Workspace  @relation(fields: [workspaceId], references: [id])
  role        Role       @default(ADMIN)
}

model Column {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  position  Int
  boardId   String   @db.ObjectId
  board     Board    @relation(fields: [boardId], references: [id])
  cards     Card[]
  activities Activity[]
}

model Card {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  column    Column  @relation(fields: [columnId], references: [id])
  columnId  String  @db.ObjectId
  position  Int 
  activities Activity[]   
}

model Activity {
  id          String   @id @default(cuid()) @map("_id")
  action      String
  description String
  createdAt   DateTime @default(now())
  userId      String   
  boardId     String?  
  columnId    String?  
  cardId      String?  
  workspaceId String  // Add this line

  user        User     @relation(fields: [userId], references: [id])
  board       Board?   @relation(fields: [boardId], references: [id])
  column      Column?  @relation(fields: [columnId], references: [id])
  card        Card?    @relation(fields: [cardId], references: [id])
  workspace   Workspace @relation(fields: [workspaceId], references: [id]) 
}



enum Role {
  ADMIN
  REPORTER
  VIEWER
}
